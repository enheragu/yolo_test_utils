## USED WHEN NO PRE-TRAIN IS WANTED

# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

## Info about the backbone here!
# https://github.com/ultralytics/ultralytics/issues/3194#issuecomment-1596150935

# Parameters
nc: 80  # number of classes
ch: 4

scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
# Modifications of YAML file inspired by https://github.com/wandahangFY/YOLOv11-RGBT/issues/2
backbone:
  # [from, repeats, module, args]
  - [-1, 1, nn.Identity, []]  # 0  just a placeholder (nn.Identity)
  # Visible backbone layers
  - [0, 1, FilterInput, [0,1,2]]  # 1-P1/2       # Keeps configured channels discarding the rest
  - [-1, 1, Conv, [64, 3, 2]]  # 2-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 3-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 5-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 7-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 9-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 11

  # Thermal backbone layers
  - [ 0, 1, FilterInput, [3] ]  # 12-P1/2        # Keeps configured channels discarding the rest
  - [-1, 1, Conv, [64, 3, 2]]  # 13-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 14-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 16-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 18-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 20-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 22


# YOLOv8.0n head
head:
  # Visible head layers
  - [11, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 8], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C2f, [512]]  # 25

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C2f, [256]]  # 28 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 25], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 31 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 11], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2f, [1024]]  # 34 (P5/32-large)


  # Thermal head layers
  - [22, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 19], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C2f, [512]]  # 37

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 17], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C2f, [256]]  # 40 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 37], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 43 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 22], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2f, [1024]]  # 46 (P5/32-large)


  - [ [ 28, 40 ], 1, Concat, [ 1 ] ]  # cat both (visible+thermal) head P3  47
  - [ [ 31, 43 ], 1, Concat, [ 1 ] ]  # cat both (visible+thermal) head P4  48
  - [ [ 34, 46 ], 1, Concat, [ 1 ] ]  # cat both (visible+thermal) head P5  49

  - [[47, 48, 49], 1, Detect, [nc]] # Detect(P3, P4, P5)

# From https://github.com/ultralytics/ultralytics/issues/3194#issuecomment-1596150935:
# The line you mentioned - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2 in the model.yaml file represents one layer in the backbone configuration. Let's break it down:
#   Â·  [-1, 1, Conv, [64, 3, 2]]: This part describes the layer itself. It starts with a negative value -1, which means that this layer takes its input from the previous layer. The 1 means that it is the first layer in the backbone. Conv indicates that it is a convolutional layer, and [64, 3, 2] specifies the configuration of this layer (specifically, it has 64 filters, a kernel size of 3x3, and a stride of 2).
#   Â·  # 0-P1/2: This comment provides additional information about this layer. The 0 indicates that this layer's output index is 0, and P1/2 suggests that the output is passed to the first detection layer which has a stride of 2.